---
- name: Load OS specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}.yml"
        - "{{ ansible_os_family|lower }}.yml"
        - defaults.yml
      paths:
        - ../vars

- name: Download the Ambari repo
  get_url: url={{ ambari_repo }} dest={{ ambari_repo_file }} force=yes backup=yes

- name: Add YUM gpgkey
  rpm_key: state=present key={{ ambari_repo_gpgkey }}
  when: ansible_os_family == "RedHat"

- name: Add apt key
  apt_key: keyserver=keyserver.ubuntu.com id={{ ambari_repo_key }}
  when: ansible_os_family == "Debian"

- name: Cache Ambari and dependant packages
  raw: time yum -y install --downloadonly ambari-agent $(yum list available | awk '$3 ~ /ambari/ {print $1}')
  when: cache_packages is defined and cache_packages and ansible_os_family == "RedHat"

- name: Get HDP repo urlinfo
  uri: url="http://{{ ambari_repo_host }}/HDP/hdp_urlinfo.json" return_content=yes
  register: json_response
  when: hdp_repo is not defined and cache_packages is defined and cache_packages and ansible_os_family == "RedHat"

- name: Set facts for HDP repo URL
  set_fact:
    hdp_repo_name="HDP-{{ hdp_version }}"
    hdp_os="centos{{ ansible_distribution_major_version }}"
  when: hdp_repo is not defined and cache_packages is defined and cache_packages and ansible_os_family == "RedHat"

- name: Set hdp_repo URL
  set_fact:
    hdp_repo="{{ (json_response.content|from_json)[hdp_repo_name]['latest'][hdp_os] }}hdp.repo"
  when: hdp_repo is not defined and cache_packages is defined and cache_packages and ansible_os_family == "RedHat"

- debug: var=hdp_repo

- name: Download the HDP repo
  get_url: url={{ hdp_repo }} dest=/etc/yum.repos.d/HDP.repo force=yes backup=yes
  when: cache_packages is defined and cache_packages and ansible_os_family == "RedHat"

- name: Pre-install HDP packages
  raw: yum -y install smartsense-hst $(yum list available | awk '$3~/HDP-[1-9]/ && $1~/^(falcon|hadoop|hadooplzo|hive|oozie|pig|spark|sqoop|tez|zookeeper)_[0-9]_[0-9]/ {print $1}')
  when: cache_packages is defined and cache_packages and ansible_os_family == "RedHat"

#- name: Backup HDP repo before remove
  #copy: remote_src=True src=/etc/yum.repos.d/HDP.repo dest=/etc/yum.repos.d/HDP.repo.orig

#- name: Remove HDP repo
  #file: path=/etc/yum.repos.d/HDP.repo state=absent
  #when: cache_packages is defined and cache_packages and ansible_os_family == "RedHat"

